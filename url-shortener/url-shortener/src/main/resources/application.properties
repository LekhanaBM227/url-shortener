spring.application.name=url-shortener

## H2 Database Configuration
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#
#spring.datasource.url=jdbc:h2:mem:urlshortenerdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#
## JPA/Hibernate Configuration
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
## 'update' will create/update the table schema based on your entities at startup.
## Good for development, but use Flyway/Liquibase for production.
#spring.jpa.hibernate.ddl-auto=update

# spring.datasource.url=jdbc:h2:mem:testdb
# ... (H2 properties)

# PostgreSQL Configuration
#spring.datasource.url=jdbc:postgresql://localhost:5432/url_shortener_db
#spring.datasource.username=postgres
#spring.datasource.password=your_password
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Comment out or delete the H2 configuration
# spring.h2.console.enabled=true
# spring.h2.console.path=/h2-console
# spring.datasource.url=jdbc:h2:mem:urlshortenerdb
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=
# spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/url_shortener_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# === Application Configuration ===
app.base-url=http://localhost:8080

# JWT Configuration
jwt.secret=bXlzdXBlcnNlY3JldGtleWZvcnVybHNob3J0ZW5lcmFwcGxpY2F0aW9uMjAyNA==
# Expiration time for JWT in milliseconds (e.g., 24 hours)
jwt.expiration-ms=86400000